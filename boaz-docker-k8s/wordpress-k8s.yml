apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-mysql # 이 Deployment 이름은 wordpress-mysql
  labels:
    app: wordpress # 이 Deployment에 'app=wordpress' label을 추가
spec:
  selector:
    matchLabels:
      app: wordpress # 'app=wordpress' 와
      tier : mysql # 'tier=mysql' label을 가진 Pod을 관리 대상으로 선택
  template:
    metadata:
      labels:
        app: wordpress # 이 Pod에 'app=wordpress' label을 추가
        tier: mysql # 이 Pod에 'tier=mysql' label을 추가
    spec:
      containers:
        - image: mariadb:10.7 # mariadb:10.7 이미지를 사용
          name: mysql # container 이름은 mysql
          env: # 환경 변수 설정
            - name: MYSQL_DATABASE
              value: wordpress # DB 이름을 wordpress로 설정
            - name: MYSQL_ROOT_PASSWORD
              value: password # root 계정의 비밀번호를 password로 설정
          ports:
            - containerPort: 3306 # container가 3306 포트를 노출
              name: mysql # 이 포트를 mysql로 이름 지정

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql # 이 Service 이름은 wordpress-mysql
  labels:
    app: wordpress # 이 Service에 'app=wordpress' label을 추가
spec:
  ports:
    - port: 3306 # cluster 내부에서 노출할 포트는 3306
  selector:
    app: wordpress # 'app=wordpress'와
    tier: mysql # 'tier=mysql' label을 가진 Pod을 대상으로함

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress # 이 Deployment 이름은 wordpress
  labels:
    app: wordpress # 이 Deployment에 'app=wordpress' label 추가
spec:
  selector:
    matchLabels:
      app: wordpress # 'app=wordpress'와
      tier: frontend # 'tier=frontend' label을 가진 Pod을 관리 대상으로 선택
  template:
    metadata:
      labels:
        app: wordpress # 이 Pod에 'app=wordpress' label 추가
        tier: frontend # 이 Pod에 'tier=frontend' label 추가
    spec:
      containers:
        - image: wordpress:5.9.1-php8.1-apache # wordpress:5.9.1-php8.1-apache 이미지를 사용
          name: wordpress # container 이름은 wordpress
          env: # 환경 변수 설정
            - name: WORDPRESS_DB_HOST
              value: wordpress-mysql # WordPress가 연결할 DB의 호스트 이름
            - name: WORDPRESS_DB_NAME
              value: wordpress # WordPress가 사용할 DB 이름
            - name: WORDPRESS_DB_USER
              value: root # DB 사용자 이름을 root로 설정
            - name: WORDPRESS_DB_PASSWORD
              value: password # DB 비밀번호를 password로 설정
          ports:
            - containerPort: 80 # container가 80 포트를 노출
              name: wordpress # 이 포트를 wordpress로 이름 지정

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress # 이 Service 이름은 wordpress
  labels:
    app: wordpress # 이 Service에 'app=wordpress' label 추가
spec:
  type: NodePort # 외부에서 접근할 수 있도록 NodePort 타입으로 설정
  ports:
    - port: 80 # cluster 내부에서 노출할 포트는 80
  selector:
    app: wordpress # 'app=wordpress'와
    tier: frontend # 'tier=frontend' label을 가진 Pod을 대상으로함